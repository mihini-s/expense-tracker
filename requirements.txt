cs50
Flask
Flask-Session
requests



CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, username TEXT NOT NULL, hash TEXT NOT NULL, income_goal NUMERIC NOT NULL DEFAULT 100, budget NUMERIC NOT NULL DEFAULT 100, currency TEXT NOT NULL DEFAULT '$');
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE income (
            income_id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            date DATE NOT NULL,
            day NUMERIC NOT NULL,
            month NUMERIC NOT NULL,
            year NUMERIC NOT NULL,
            source TEXT NOT NULL,
            description TEXT,
            category TEXT NOT NULL,
            amount NUMERIC NOT NULL,
            payslip BLOB,
            time TIME NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
CREATE TABLE debt (
            debt_id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            date DATE NOT NULL,
            day NUMERIC NOT NULL,
            month NUMERIC NOT NULL,
            year NUMERIC NOT NULL,
            creditor TEXT NOT NULL,
            info TEXT,
            debt NUMERIC NOT NULL,
            time TIME NOT NULL,
            done TEXT NOT NULL DEFAULT 'Pending',
            done_time DATE,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
CREATE TABLE expenses (
            expenses_id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            date DATE NOT NULL,
            day NUMERIC NOT NULL,
            month NUMERIC NOT NULL,
            year NUMERIC NOT NULL,
            item TEXT NOT NULL,
            description TEXT,
            category TEXT NOT NULL,
            amount NUMERIC NOT NULL,
            receipt BLOB,
            time TIME NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
CREATE TABLE categories (
            category_id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            category_name TEXT NOT NULL,
            mode TEXT NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
